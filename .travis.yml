env:
    global:
        - REPO_DIR=cffi
        - MB_ML_VER=2014
        - CFFI_HG_TAG=default

language: generic
services: docker
os: linux
dist: focal

jobs:
  exclude:
      # Exclude the default Python 3.5 build
      - python: 3.5
  include:
      - arch: arm64
        env:
          - PLAT=aarch64
          - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
          - MB_PYTHON_VERSION=3.6
      - arch: arm64
        env:
          - PLAT=aarch64
          - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
          - MB_PYTHON_VERSION=3.7
      - arch: arm64
        env:
          - PLAT=aarch64
          - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
          - MB_PYTHON_VERSION=3.8
      - arch: arm64
        env:
          - PLAT=aarch64
          - DOCKER_TEST_IMAGE=multibuild/xenial_arm64v8
          - MB_PYTHON_VERSION=3.9
      - arch: ppc64le
        env:
          - PLAT=ppc64le
          - DOCKER_TEST_IMAGE=multibuild/xenial_ppc64le
          - MB_PYTHON_VERSION=3.6
      - arch: ppc64le
        env:
          - PLAT=ppc64le
          - DOCKER_TEST_IMAGE=multibuild/xenial_ppc64le
          - MB_PYTHON_VERSION=3.7
      - arch: ppc64le
        env:
          - PLAT=ppc64le
          - DOCKER_TEST_IMAGE=multibuild/xenial_ppc64le
          - MB_PYTHON_VERSION=3.8
      - arch: ppc64le
        env:
          - PLAT=ppc64le
          - DOCKER_TEST_IMAGE=multibuild/xenial_ppc64le
          - MB_PYTHON_VERSION=3.9
      - arch: s390x
        env:
          - PLAT=s390x
          - DOCKER_TEST_IMAGE=multibuild/xenial_s390x
          - MB_PYTHON_VERSION=3.6
      - arch: s390x
        env:
          - PLAT=s390x
          - DOCKER_TEST_IMAGE=multibuild/xenial_s390x
          - MB_PYTHON_VERSION=3.7
      - arch: s390x
        env:
          - PLAT=s390x
          - DOCKER_TEST_IMAGE=multibuild/xenial_s390x
          - MB_PYTHON_VERSION=3.8
      - arch: s390x
        env:
          - PLAT=s390x
          - DOCKER_TEST_IMAGE=multibuild/xenial_s390x
          - MB_PYTHON_VERSION=3.9

before_install:
    - sudo apt-get install mercurial
    - hg clone https://foss.heptapod.net/pypy/cffi
    - echo "checking out ref ${CFFI_HG_TAG:=`hg tags --template '{tag}\n' | grep '^v' | head -n1`}"
    - (cd cffi; hg up -r $CFFI_HG_TAG)
    - TEST_DEPENDS="pytest pycparser"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
  - echo 'outputs:'
  - ls -l ./wheelhouse/*.whl
  - sha1sum ./wheelhouse/*.whl
  - artifacts upload --target-paths /${TRAVIS_REPO_SLUG}/${TRAVIS_BUILD_NUMBER} ./wheelhouse/
  - echo 'done'

#after_success:
#    - pip install twine "cryptography~=3.3.2"
#    - twine check ${TRAVIS_BUILD_DIR}/wheelhouse/*
#    - if [ "${TRAVIS_PULL_REQUEST}" == "false" ]; then twine upload ${TRAVIS_BUILD_DIR}/wheelhouse/*; fi
